#!/bin/bash

if [[ "$1" == "measure" ]]; then
    CC=gcc
    CFLAGS="-Wall -Wextra -Werror -O3 -I./include -DMEASURE"
    LFLAGS="-lturbojpeg -lglfw -lavformat -lavcodec -lavutil -O3"
elif [[ "$1" == "debug" ]]; then
    CC=gcc
    CFLAGS="-Wall -Wextra -Werror -g -I./include"
    LFLAGS="-lturbojpeg -lglfw -lavformat -lavcodec -lavutil -g"
else
    CC=gcc
    CFLAGS="-Wall -Wextra -Werror -O3 -I./include"
    LFLAGS="-lturbojpeg -lglfw -lavformat -lavcodec -lavutil -O3"
fi


rm -rf ./obj
mkdir -p ./obj
rm -rf ./bin
mkdir -p ./bin

compile(){
    echo $CC $CFLAGS -c $1 -o $2
    $CC $CFLAGS -c $1 -o $2
    if [ $? -ne 0 ]; then
        echo "Compilation failed for $cFilename!"
        exit 1
    fi
}

link() {
    filenames=("${@:1:$#-1}")
    output_file="${!#}"
    echo $CC "${filenames[@]}" $LFLAGS -o "$output_file"
    $CC "${filenames[@]}" $LFLAGS -o "$output_file"
    if [ $? -ne 0 ]; then
        echo "Linking failed!"
        exit 1
    fi
}

compile "./src/GLAD.c" "./obj/GLAD.o"
compile "./src/VideoCapture.c" "./obj/VideoCapture.o"
compile "./src/VideoDecoder.c" "./obj/VideoDecoder.o"
compile "./src/VideoPipe.c" "./obj/VideoPipe.o"
compile "./src/VideoRecorder.c" "./obj/VideoRecorder.o"
compile "./src/VideoRenderer.c" "./obj/VideoRenderer.o"
compile "./src/VideoUDPReceiver.c" "./obj/VideoUDPReceiver.o"
compile "./src/VideoUDPSender.c" "./obj/VideoUDPSender.o"
compile "./src/VideoUDPShared.c" "./obj/VideoUDPShared.o"
compile "./src/FastMJPG.c" "./obj/FastMJPG.o"

link "./obj/GLAD.o" "./obj/VideoCapture.o" "./obj/VideoDecoder.o" "./obj/VideoPipe.o" "./obj/VideoRecorder.o" "./obj/VideoRenderer.o" "./obj/VideoUDPReceiver.o" "./obj/VideoUDPSender.o" "./obj/VideoUDPShared.o" "./obj/FastMJPG.o" "./bin/fj"

echo "Build successful!"
exit 0